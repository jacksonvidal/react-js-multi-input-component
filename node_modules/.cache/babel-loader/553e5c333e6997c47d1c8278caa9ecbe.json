{"ast":null,"code":"import _toConsumableArray from \"/home/jvidal/Projects/multiple-inputs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/jvidal/Projects/multiple-inputs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jvidal/Projects/multiple-inputs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jvidal/Projects/multiple-inputs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jvidal/Projects/multiple-inputs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jvidal/Projects/multiple-inputs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jvidal/Projects/multiple-inputs/src/components/MultiInput/MultiInput.jsx\";\nimport React, { Component } from 'react';\n\nvar MultiInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MultiInput, _Component);\n\n  function MultiInput(_props) {\n    var _this;\n\n    _classCallCheck(this, MultiInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiInput).call(this, _props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n    };\n\n    _this.handleChange = function (e) {\n      var inputs = _toConsumableArray(_this.props.inputs);\n\n      inputs[e.target.dataset.id] = e.target.value;\n\n      _this.setState({\n        inputs: inputs\n      }, console.log(_this.props.inputs));\n    };\n\n    _this.handleInputTyping = function (e) {\n      var index = e.target.dataset.id;\n\n      if (props.inputs.length <= index) {\n        _this.setState(function (prevState) {\n          return {\n            inputs: _toConsumableArray(prevState.inputs).concat([\"\"])\n          };\n        });\n      }\n    };\n\n    _this.removeInput = function (e) {};\n\n    return _this;\n  }\n\n  _createClass(MultiInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \"Test\"), React.createElement(\"div\", {\n        id: \"field-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-fields\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, \"test attribute\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"first input\",\n        \"data-id\": \"0\",\n        onKeyUp: this.handleInputTyping,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        onClick: this.removeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"X\")), props.inputs.map(function (value, idx) {\n        console.log(value);\n        idx++;\n        return React.createElement(\"div\", {\n          className: \"form-fields\",\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 48\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49\n          },\n          __self: this\n        }, \"test attribute\"), React.createElement(\"input\", {\n          type: \"text\",\n          className: \"input\",\n          \"data-id\": idx,\n          onKeyDown: _this2.handleInputTyping,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 50\n          },\n          __self: this\n        }), value ? React.createElement(\"button\", {\n          className: \"exclude-button-invisible\",\n          onClick: _this2.removeInput,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, \"X\") : \"\");\n      })), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, \"Cancel\"), React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, \"Save\"));\n    }\n  }]);\n\n  return MultiInput;\n}(Component);\n\nexport default MultiInput;","map":{"version":3,"sources":["/home/jvidal/Projects/multiple-inputs/src/components/MultiInput/MultiInput.jsx"],"names":["React","Component","MultiInput","props","handleSubmit","e","preventDefault","handleChange","inputs","target","dataset","id","value","setState","console","log","handleInputTyping","index","length","prevState","removeInput","map","idx"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n\nclass MultiInput extends Component {\n    \n    constructor(props) {\n        super(props);\n    }\n\n    handleSubmit = (e) => { e.preventDefault() }\n\n    handleChange = (e) => {\n        let inputs = [...this.props.inputs];\n        inputs[e.target.dataset.id] = e.target.value;\n        this.setState({inputs}, console.log(this.props.inputs));\n    }\n\n    handleInputTyping = (e) => {\n        \n        let index = e.target.dataset.id;\n\n        if(props.inputs.length <= index) {\n            this.setState((prevState) => ({\n                inputs: [...prevState.inputs, \"\"]\n            }));\n        }\n    }\n\n    removeInput = (e) => {\n       \n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n                <h4>Test</h4>\n                <div id=\"field-list\">\n                    <div className=\"form-fields\">\n                        <label>test attribute</label>\n                        <input type=\"text\" className=\"first input\" data-id=\"0\" onKeyUp={this.handleInputTyping} />\n                        <button onClick={this.removeInput}>X</button>\n                    </div>\n                    {\n                        props.inputs.map((value, idx) => {\n                            console.log(value);\n                            idx++;\n\n                            return(\n                                <div className=\"form-fields\" key={idx}>\n                                    <label>test attribute</label>\n                                    <input type=\"text\" className=\"input\" data-id={idx} onKeyDown={this.handleInputTyping} />\n\n                                    { value ? (<button className=\"exclude-button-invisible\" onClick={this.removeInput}>X</button>) : \"\" }\n                                </div>\n                            )\n                        })\n                    }\n                </div>\n                <button>Cancel</button>\n                <button>Save</button>\n            </form>\n        );\n    }\n}\n\nexport default MultiInput;"]},"metadata":{},"sourceType":"module"}