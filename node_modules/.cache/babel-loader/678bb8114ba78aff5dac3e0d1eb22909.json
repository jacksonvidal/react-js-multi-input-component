{"ast":null,"code":"import _classCallCheck from \"/home/jvidal/Projects/multiple-inputs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jvidal/Projects/multiple-inputs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jvidal/Projects/multiple-inputs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jvidal/Projects/multiple-inputs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jvidal/Projects/multiple-inputs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jvidal/Projects/multiple-inputs/src/components/MultiInput/FormInput.jsx\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar FromInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(FromInput, _Component);\n\n  function FromInput(props) {\n    _classCallCheck(this, FromInput);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(FromInput).call(this, props));\n  }\n\n  _createClass(FromInput, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"form-fields\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, \"test attribute\"), React.createElement(\"input\", {\n        type: \"text\",\n        className: \"input\",\n        \"data-id\": this.props.idx,\n        defaultValue: this.props.value,\n        onKeyDown: this.props.handleInputTyping,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), this.props.value ? React.createElement(\"button\", {\n        \"data-id\": this.props.idx,\n        onClick: this.props.removeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"X\") : \"\");\n    }\n  }]);\n\n  return FromInput;\n}(Component);\n\nexport { FromInput as default };\nFromInput.propTypes = {\n  idx: PropTypes.number.isRequired,\n  handleInputTyping: PropTypes.func.isRequired,\n  removeInput: PropTypes.func.isRequired\n};","map":{"version":3,"sources":["/home/jvidal/Projects/multiple-inputs/src/components/MultiInput/FormInput.jsx"],"names":["React","Component","PropTypes","FromInput","props","idx","value","handleInputTyping","removeInput","propTypes","number","isRequired","func"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;;IAEqBC,S;;;;;AAEjB,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA,kFACTA,KADS;AAElB;;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,EAEI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,SAAS,EAAC,OAA7B;AAAqC,mBAAS,KAAKA,KAAL,CAAWC,GAAzD;AAA8D,QAAA,YAAY,EAAE,KAAKD,KAAL,CAAWE,KAAvF;AAA8F,QAAA,SAAS,EAAE,KAAKF,KAAL,CAAWG,iBAApH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAGM,KAAKH,KAAL,CAAWE,KAAX,GAAoB;AAAQ,mBAAS,KAAKF,KAAL,CAAWC,GAA5B;AAAiC,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWI,WAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAApB,GAAoG,EAH1G,CADJ;AAOH;;;;EAdkCP,S;;SAAlBE,S;AAkBrBA,SAAS,CAACM,SAAV,GAAsB;AAClBJ,EAAAA,GAAG,EAAEH,SAAS,CAACQ,MAAV,CAAiBC,UADJ;AAElBJ,EAAAA,iBAAiB,EAAEL,SAAS,CAACU,IAAV,CAAeD,UAFhB;AAGlBH,EAAAA,WAAW,EAAEN,SAAS,CAACU,IAAV,CAAeD;AAHV,CAAtB","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class FromInput extends Component {\n\n    constructor(props) {\n        super(props);\n    }\n\n    render() {\n        return(\n            <div className=\"form-fields\">\n                <label>test attribute</label>\n                <input type=\"text\" className=\"input\" data-id={this.props.idx} defaultValue={this.props.value} onKeyDown={this.props.handleInputTyping} />\n                { this.props.value ? (<button data-id={this.props.idx} onClick={this.props.removeInput}>X</button>) : \"\" }\n            </div>\n        )\n    }\n\n}\n\nFromInput.propTypes = {\n    idx: PropTypes.number.isRequired,\n    handleInputTyping: PropTypes.func.isRequired,\n    removeInput: PropTypes.func.isRequired,\n}"]},"metadata":{},"sourceType":"module"}