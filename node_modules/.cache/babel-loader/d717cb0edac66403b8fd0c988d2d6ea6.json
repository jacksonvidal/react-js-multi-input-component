{"ast":null,"code":"import _toConsumableArray from \"/home/jvidal/Projects/multiple-inputs/react-js-multi-input-component/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/jvidal/Projects/multiple-inputs/react-js-multi-input-component/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jvidal/Projects/multiple-inputs/react-js-multi-input-component/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jvidal/Projects/multiple-inputs/react-js-multi-input-component/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jvidal/Projects/multiple-inputs/react-js-multi-input-component/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jvidal/Projects/multiple-inputs/react-js-multi-input-component/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jvidal/Projects/multiple-inputs/react-js-multi-input-component/src/components/MultiInput/MultiInput.jsx\";\nimport React, { Component } from 'react';\nimport FormInput from './FormInput';\nimport PropTypes from 'prop-types';\n\nvar MultiInput =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MultiInput, _Component);\n\n  function MultiInput(props) {\n    var _this;\n\n    _classCallCheck(this, MultiInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MultiInput).call(this, props));\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n    };\n\n    _this.handleChange = function (e) {\n      var inputs = _toConsumableArray(_this.state.inputs);\n\n      inputs[e.target.dataset.id] = e.target.value;\n\n      _this.setState({\n        inputs: inputs\n      }); //, console.log(this.state.inputs));\n\n    };\n\n    _this.handleInputTyping = function (e) {\n      var index = e.target.dataset.id;\n\n      if (_this.state.inputs.length - 1 <= index) {\n        _this.setState(function (prevState) {\n          return {\n            inputs: _toConsumableArray(prevState.inputs).concat([\"\"])\n          };\n        });\n      }\n    };\n\n    _this.removeInput = function (e) {\n      var inputs = _this.state.inputs.slice(e.target.dataset.id, 1);\n\n      console.log(inputs);\n      return;\n\n      _this.setState({\n        inputs: inputs\n      });\n    };\n\n    _this.renderSingleForm = function () {\n      var idx = _this.state.inputs.length > 0 ? _this.state.inputs.length - 1 : _this.state.inputs.length;\n      var value = _this.state.inputs.length[idx];\n\n      _this.setState(function (prevState) {\n        return {\n          inputs: _toConsumableArray(prevState.inputs).concat([\"\"])\n        };\n      });\n\n      return React.createElement(FormInput, {\n        idx: idx,\n        value: value,\n        handleInputTyping: _this.handleInputTyping,\n        removeInput: _this.removeInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      });\n    };\n\n    _this.state = {\n      inputs: props.inputs\n    };\n    return _this;\n  }\n\n  _createClass(MultiInput, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-sm-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"col-sm-6\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.handleSubmit,\n        onChange: this.handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Test\"), React.createElement(\"div\", {\n        id: \"field-list\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, this.state.inputs.length === 0 ? this.renderSingleForm() : this.state.inputs.map(function (value, idx) {\n        return React.createElement(FormInput, {\n          idx: idx,\n          value: value,\n          handleInputTyping: _this2.handleInputTyping,\n          removeInput: _this2.removeInput,\n          key: idx,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        });\n      })), React.createElement(\"div\", {\n        className: \"form-controls\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"SAVE\"), \" \", React.createElement(\"button\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"CANCEL\"))))));\n    }\n  }]);\n\n  return MultiInput;\n}(Component);\n\nexport { MultiInput as default };\nMultiInput.propTypes = {\n  inputs: PropTypes.array\n};","map":{"version":3,"sources":["/home/jvidal/Projects/multiple-inputs/react-js-multi-input-component/src/components/MultiInput/MultiInput.jsx"],"names":["React","Component","FormInput","PropTypes","MultiInput","props","handleSubmit","e","preventDefault","handleChange","inputs","state","target","dataset","id","value","setState","handleInputTyping","index","length","prevState","removeInput","slice","console","log","renderSingleForm","idx","map","propTypes","array"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport FormInput from './FormInput'\nimport PropTypes from 'prop-types';\n\nexport default class MultiInput extends Component {\n    \n    constructor(props) {\n        super(props);\n\n        this.state = {\n            inputs: props.inputs,\n        };\n    }\n\n    handleSubmit = (e) => { e.preventDefault() }\n\n    handleChange = (e) => {\n        let inputs = [...this.state.inputs];\n        inputs[e.target.dataset.id] = e.target.value;\n        this.setState({inputs});//, console.log(this.state.inputs));\n    }\n\n    handleInputTyping = (e) => {\n        \n        let index = e.target.dataset.id;\n\n        if((this.state.inputs.length -1) <= index) {\n            this.setState((prevState) => ({\n                inputs: [...prevState.inputs, \"\"]\n            }));\n        }\n    }\n\n    removeInput = (e) => {\n        \n        let inputs = this.state.inputs.slice(e.target.dataset.id, 1);\n\n        console.log(inputs);\n        return;\n\n        this.setState({inputs});\n    }\n    \n\n    renderSingleForm = () => {\n        \n        let idx = (this.state.inputs.length > 0 ? this.state.inputs.length - 1 : this.state.inputs.length);\n        let value = this.state.inputs.length[idx];\n\n        this.setState((prevState) => ({\n            inputs: [...prevState.inputs, \"\"]\n        }));\n\n        return(<FormInput idx={idx} value={value} handleInputTyping={this.handleInputTyping} removeInput={this.removeInput} />);\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-sm-3\"></div>\n                    <div className=\"col-sm-6\">\n                        <form onSubmit={this.handleSubmit} onChange={this.handleChange}>\n                            <h4>Test</h4>\n                            <div id=\"field-list\">\n                            {\n                                this.state.inputs.length === 0 ? this.renderSingleForm() : \n                                this.state.inputs.map((value, idx) => {\n                                    return(<FormInput idx={idx} value={value} handleInputTyping={this.handleInputTyping} removeInput={this.removeInput} key={idx} />)\n                                })\n                            }\n                            </div>\n                            <div className=\"form-controls\">\n                                <button>SAVE</button> <button>CANCEL</button>\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>        \n        );\n    }\n}\n\nMultiInput.propTypes = {\n    inputs: PropTypes.array,\n}"]},"metadata":{},"sourceType":"module"}